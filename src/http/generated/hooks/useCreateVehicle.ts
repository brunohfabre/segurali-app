/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import fetch from '@kubb/plugin-client/clients/axios'
import type { CreateVehicleMutationRequest, CreateVehicleMutationResponse } from '../types/CreateVehicle.ts'
import type { RequestConfig, ResponseErrorConfig } from '@kubb/plugin-client/clients/axios'
import type { UseMutationOptions, QueryClient } from '@tanstack/react-query'
import { useMutation } from '@tanstack/react-query'

export const createVehicleMutationKey = () => [{ url: '/vehicles' }] as const

export type CreateVehicleMutationKey = ReturnType<typeof createVehicleMutationKey>

/**
 * @summary Create vehicle
 * {@link /vehicles}
 */
export async function createVehicle(
  data: CreateVehicleMutationRequest,
  config: Partial<RequestConfig<CreateVehicleMutationRequest>> & { client?: typeof fetch } = {},
) {
  const { client: request = fetch, ...requestConfig } = config

  const requestData = data
  const res = await request<CreateVehicleMutationResponse, ResponseErrorConfig<Error>, CreateVehicleMutationRequest>({
    method: 'POST',
    url: `/vehicles`,
    baseURL: 'http://localhost:3333',
    data: requestData,
    ...requestConfig,
  })
  return res.data
}

/**
 * @summary Create vehicle
 * {@link /vehicles}
 */
export function useCreateVehicle<TContext>(
  options: {
    mutation?: UseMutationOptions<CreateVehicleMutationResponse, ResponseErrorConfig<Error>, { data: CreateVehicleMutationRequest }, TContext> & {
      client?: QueryClient
    }
    client?: Partial<RequestConfig<CreateVehicleMutationRequest>> & { client?: typeof fetch }
  } = {},
) {
  const { mutation = {}, client: config = {} } = options ?? {}
  const { client: queryClient, ...mutationOptions } = mutation
  const mutationKey = mutationOptions.mutationKey ?? createVehicleMutationKey()

  return useMutation<CreateVehicleMutationResponse, ResponseErrorConfig<Error>, { data: CreateVehicleMutationRequest }, TContext>(
    {
      mutationFn: async ({ data }) => {
        return createVehicle(data, config)
      },
      mutationKey,
      ...mutationOptions,
    },
    queryClient,
  )
}