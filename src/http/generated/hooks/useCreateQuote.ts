/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import fetch from '@kubb/plugin-client/clients/axios'
import type { CreateQuoteMutationRequest, CreateQuoteMutationResponse, CreateQuote409 } from '../types/CreateQuote.ts'
import type { RequestConfig, ResponseErrorConfig } from '@kubb/plugin-client/clients/axios'
import type { UseMutationOptions, QueryClient } from '@tanstack/react-query'
import { useMutation } from '@tanstack/react-query'

export const createQuoteMutationKey = () => [{ url: '/quotes' }] as const

export type CreateQuoteMutationKey = ReturnType<typeof createQuoteMutationKey>

/**
 * @summary Create quote
 * {@link /quotes}
 */
export async function createQuote(
  data: CreateQuoteMutationRequest,
  config: Partial<RequestConfig<CreateQuoteMutationRequest>> & { client?: typeof fetch } = {},
) {
  const { client: request = fetch, ...requestConfig } = config

  const requestData = data
  const res = await request<CreateQuoteMutationResponse, ResponseErrorConfig<CreateQuote409>, CreateQuoteMutationRequest>({
    method: 'POST',
    url: `/quotes`,
    baseURL: 'http://localhost:3333',
    data: requestData,
    ...requestConfig,
  })
  return res.data
}

/**
 * @summary Create quote
 * {@link /quotes}
 */
export function useCreateQuote<TContext>(
  options: {
    mutation?: UseMutationOptions<CreateQuoteMutationResponse, ResponseErrorConfig<CreateQuote409>, { data: CreateQuoteMutationRequest }, TContext> & {
      client?: QueryClient
    }
    client?: Partial<RequestConfig<CreateQuoteMutationRequest>> & { client?: typeof fetch }
  } = {},
) {
  const { mutation = {}, client: config = {} } = options ?? {}
  const { client: queryClient, ...mutationOptions } = mutation
  const mutationKey = mutationOptions.mutationKey ?? createQuoteMutationKey()

  return useMutation<CreateQuoteMutationResponse, ResponseErrorConfig<CreateQuote409>, { data: CreateQuoteMutationRequest }, TContext>(
    {
      mutationFn: async ({ data }) => {
        return createQuote(data, config)
      },
      mutationKey,
      ...mutationOptions,
    },
    queryClient,
  )
}